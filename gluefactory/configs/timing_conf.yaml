model:
    name: extractors.joint_point_line_extractor
    aliked_model_name: "aliked-n16"
    max_num_keypoints: 2048  # setting for training, for eval: -1
    detection_threshold: 0.0
    # use_deeplsd_endpoints: true
    line_df_decoder_channels: 32  # adapt to your checkpoint!!
    line_af_decoder_channels: 32
    use_line_anglefield: True  # ~ 7ms difference
    nms_radius: 3
    training:
      do: False
    checkpoint: /local/home/Point-Line/outputs/training/oxparis_800_focal/checkpoint_best.tar
    timeit: True  # setting it to True -> gives 4-5 fps less performance
    line_detection:
      do: True
      conf:
          max_point_size: 1500
          min_line_length: 6
          max_line_length: null
          max_lines: 2000

          samples: [24]

          distance_map:
              max_value: 5
              threshold: 0.45
              smooth_threshold: 0.8
              avg_filter_size: 13
              avg_filter_padding: 6
              avg_filter_stride: 1
              inlier_ratio: 0.7
              max_accepted_mean_value: 0.4

          brute_force_df:
              use: true                       # Use brute force sampling for distance field in the second stage
              image_size: 800                  # Image size for which the coefficients are generated
              inlier_ratio: 0.95                # Ratio of inliers
              max_accepted_mean_value: 0.4     # Maximum accepted DF mean value along the line
              binary_threshold: 0.5            # Threshold for binarizing the distance field

          angle_map:
              threshold: 0.1                   # Threshold for deciding if a line angle is correct
              inlier_ratio: 0.8              # Ratio of inliers
              max_accepted_mean_value: 0.1     # Maximum difference in AF mean value with line angle


          mlp_conf:
              name: gluefactory.models.lines.pold2_mlp
              has_angle_field: True
              has_distance_field: True

              num_line_samples: 30    # number of sampled points between line endpoints
              brute_force_samples: False  # sample all points between line endpoints
              image_size: null         # size of the input image relevant only if brute_force_samples is True

              num_bands: 3            # number of bands to sample along the line
              band_width: 1           # width of the band to sample along the line

              mlp_hidden_dims: [256, 128, 128, 64, 32] # hidden dimensions of the MLP

              cnn_1d:              # 1D CNN to extract features from the input
                  use: true
                  mode: disjoint  # separate CNNs for angle and distance fields disjoint or shared
                  merge_mode: add  # how to merge the features from angle and distance fields
                  kernel_size: 3
                  stride: 1
                  padding: same
                  channels: [4, 8, 16]  # number of channels in each layer

              cnn_2d:             # 2D CNN to extract features from the input
                  use: false
                  kernel_size: 3
                  stride: 1
                  padding: same
                  channels: [4, 8, 16]  # number of channels in each layer

              pred_threshold: 0.8
              weights: /local/home/Point-Line/outputs/training/pold2_cnn1d_NS-30_NB-3_disjoint/checkpoint_best.tar

          filters:
              distance_field: True
              angle_field: False
              brute_force_df: True
              mlp: False

          nms: false
          debug: false

  checkpoint: /local/home/Point-Line/outputs/training/oxparis_800_focal/checkpoint_best.tar


data:
    name: gluefactory.datasets.oxford_paris_mini_1view_jpldd
    data_dir: "revisitop1m_POLD2/jpg"
    split: 'val'  # split must be selected 
    grayscale: False
    num_workers: 2  
    train_batch_size: 1  
    val_batch_size: 1
    prefetch_factor: 2
    reshape: 800  
    square_pad: False 
    multiscale_learning:
        do: False  
    load_features:
        do: False
    val_size: 500
    train_size: 11500